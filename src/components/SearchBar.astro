---
interface Props {
  placeholder?: string;
}

const { placeholder = "Search resources..." } = Astro.props;
---

<div class="relative max-w-2xl mx-auto mb-8">
  <input
    type="text"
    id="search"
    placeholder={placeholder}
    class="w-full pl-10 pr-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-blue-500 dark:focus:ring-blue-400 focus:border-transparent"
  />
  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 absolute left-3 top-3.5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
  </svg>
</div>

<script>
  const searchInput = document.getElementById("search") as HTMLInputElement;
  const resourceCards = document.querySelectorAll(".resource-card");

  searchInput?.addEventListener("input", (e) => {
    const searchTerm = (e.target as HTMLInputElement).value.toLowerCase();

    resourceCards.forEach((card) => {
      const title = card.querySelector("h3")?.textContent?.toLowerCase() || "";
      const description = card.querySelector("p")?.textContent?.toLowerCase() || "";
      const categories = Array.from(card.querySelectorAll(".category-tag")).map(
        (tag) => tag.textContent?.toLowerCase() || ""
      );

      const matches =
        title.includes(searchTerm) ||
        description.includes(searchTerm) ||
        categories.some((category) => category.includes(searchTerm));

      card.classList.toggle("hidden", !matches);
    });
  });
</script> 